// <auto-generated />
using System;
using Labiofam.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labiofam.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20231012005740_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Labiofam.Models.Client", b =>
                {
                    b.Property<Guid>("Client_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Client_ID");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Contact", b =>
                {
                    b.Property<Guid>("Contact_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contact_Info")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Contact_ID");

                    b.ToTable("Contactos", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Point_of_Sales", b =>
                {
                    b.Property<Guid>("Point_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Municipality")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Province")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Point_ID");

                    b.ToTable("PuntosDeVenta", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Product", b =>
                {
                    b.Property<Guid>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Specifications")
                        .HasColumnType("longtext");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Product_ID");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Product_POS", b =>
                {
                    b.Property<Guid>("Point_ID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("Point_ID", "Product_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Producto_PuntoDeVenta", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Role", b =>
                {
                    b.Property<Guid>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Role_ID");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Service", b =>
                {
                    b.Property<Guid>("Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Info")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Service_ID");

                    b.ToTable("Servicios", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.User", b =>
                {
                    b.Property<Guid>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("User_ID");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.User_Product", b =>
                {
                    b.Property<Guid>("User_ID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("char(36)");

                    b.HasKey("User_ID", "Product_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Usuario_Producto", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.User_Role", b =>
                {
                    b.Property<Guid>("User_ID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Role_ID")
                        .HasColumnType("char(36)");

                    b.HasKey("User_ID", "Role_ID");

                    b.HasIndex("Role_ID");

                    b.ToTable("Usuario_Rol", (string)null);
                });

            modelBuilder.Entity("Labiofam.Models.Product_POS", b =>
                {
                    b.HasOne("Labiofam.Models.Point_of_Sales", "Point_Of_Sales")
                        .WithMany("Available_Products")
                        .HasForeignKey("Point_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labiofam.Models.Product", "Product")
                        .WithMany("Points_Of_Sales")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Point_Of_Sales");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Labiofam.Models.User_Product", b =>
                {
                    b.HasOne("Labiofam.Models.Product", "Product")
                        .WithMany("Users")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labiofam.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Labiofam.Models.User_Role", b =>
                {
                    b.HasOne("Labiofam.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labiofam.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Labiofam.Models.Point_of_Sales", b =>
                {
                    b.Navigation("Available_Products");
                });

            modelBuilder.Entity("Labiofam.Models.Product", b =>
                {
                    b.Navigation("Points_Of_Sales");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Labiofam.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Labiofam.Models.User", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
